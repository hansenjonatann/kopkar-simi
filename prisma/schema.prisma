// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  name String 
  username String 
  password String 
  role Role  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}



model Product {
  id          String          @id @default(uuid())
  name        String
  code         String       
  description String?
  price       Int          @default(0)
  cost        Int          @default(0)
  stock       Int          @default(0)
  categoryId  String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  category Category @relation(fields: [categoryId] , references: [id])
  SaleItems   SaleItem[]
  InventoryLogs InventoryLog[]
}

model Category {
  id          String       @id @default(uuid())
  name        String    
  slug        String
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  products    Product[]
}

model Sale {
  id          String   @id @default(uuid())
  date        String
  discount    Int?
  subtotal    Int
  total       Int
  paymentmethod PaymentMethod 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  transaction Transaction[]
  SaleItems SaleItem[]
}

model Transaction {
  id            Int       @id @default(autoincrement())
  saleId        String
  paymentAmount Float
  change        Float
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  Sale          Sale      @relation(fields: [saleId], references: [id])
}


model SaleItem {
  id          String       @id @default(uuid())
  saleId      String
  productId   String
  quantity    Int       @default(1)
  unitPrice   Int       @default(0)
  

  Sale        Sale      @relation(fields: [saleId], references: [id])
  Product     Product   @relation(fields: [productId], references: [id])
}



model InventoryLog {
  id          Int       @id @default(autoincrement())
  productId   String
  changeType  ChangeType 
  quantity    Int
  note        String?
  createdAt   DateTime  @default(now())
  date String

  Product     Product   @relation(fields: [productId], references: [id])
}

enum ChangeType {
  PURCHASE
  SALE
  ADJUSTMENT
}

enum PaymentMethod {
  CASH
  CARD
  DIGITAL
}

enum Role {
  ADMIN 
  CASHIER
  MANAGER
}